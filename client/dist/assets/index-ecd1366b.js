(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))r(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const c of o.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&r(c)}).observe(document,{childList:!0,subtree:!0});function a(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerPolicy&&(o.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?o.credentials="include":t.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(t){if(t.ep)return;t.ep=!0;const o=a(t);fetch(t.href,o)}})();const i=$("#results"),h=$("#welcome");$("#myButton1");$(".user_task_btn");const g=$("#new_email"),T=$("#userInput"),y=$("#userInputSignin");$(".task-card");const u=$("#not_complete"),k=$("#complete"),f=$("#NewTaskSearch");$(".task-container");const w=$(".beGone"),m="https://task-app-by-seb.onrender.com/";$(document).ready(function(){$("#not_complete").hide(),$("#complete").hide()});function _(){const s=T.val();fetch(`${m}newuser`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({user_email:s})}).then(e=>{console.log(e.status),e.status===400&&alert("Email Exists, Please Sign In"),e.status===405&&alert("Please use a valid email"),e.status==201&&alert("Welcome! New User Created")}).catch(e=>{e.message==="No response"&&alert("email exists"),console.error("Error! ",e)})}T.on("keypress",s=>{s.key==="Enter"&&(s.preventDefault(),_())});g.on("click",()=>{_()});function v(){const s=y.val();fetch(`${m}users/${s}`).then(e=>e.json()).then(e=>{if(console.log(e),e==="USER NOT FOUND"||e===0||e===void 0)alert("USER NOT FOUND!!!");else{w.remove(),h.empty();let a=e.user_email;const r=$("<h1></h1>").attr("class","welcome-card").attr("id",`${e.user_id}`).text(` Welcome, ${a} `);h.append(r),x()}}).catch(e=>{console.error("error",e)})}y.on("keypress",s=>{s.key==="Enter"&&(s.preventDefault(),v())});function x(){const s=$(".welcome-card").attr("id");fetch(`${m}tasks/${s}`).then(e=>e.json()).then(e=>{$("#not_complete").show(),$("#complete").show(),i.empty(),u.empty(),k.empty(),f.empty();for(let o of e){let c=o.todo;const n=$("<div></div>").attr("class","task-card");if(o.completed===!1){n.text(`${c} `);const p=$("<button>x</i></button>").attr("data-task-id",o.task_id).attr("class","delete_task"),d=$("<div></div>").attr("class","task-container"),l=$("<button>To-Do</i></button>").attr("data-task-id",o.task_id).attr("id",o.user_id).attr("data-task-complete",o.completed).attr("class","incomplete_task");n.prepend(l),n.prepend(p),d.append(n),u.append(d),i.append(u)}else{n.text(`${c}  `);const p=$("<button>Done</i></button>").attr("data-task-id",o.task_id).attr("id",o.user_id).attr("data-task-complete",o.completed).attr("class","completed_task"),d=$("<button>x</i></button>").attr("data-task-id",o.task_id).attr("class","delete_task"),l=$("<div></div>").attr("class","task-container");n.prepend(p),n.prepend(d),l.append(n),k.append(l),i.append(k)}}const a=document.createElement("div");a.className="TodoInputDiv";const r=document.createElement("form");r.className="newTodo";const t=document.createElement("input");t.name="text",t.set=t.text,t.setAttribute("placeholder","Type New Task"),t.setAttribute("class","newTodoText"),t.setAttribute("id",`${s}`),r.append(t),a.append(r),f.append(a)}).catch(e=>{console.error("Error:",e)})}function E(){const s=$(".newTodoText").attr("id"),e=$(".newTodoText").val();console.log(e),fetch(`${m}newtask/${s}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({newTaskInput:e})}).then(a=>a.json()).then(a=>{let r=a.todo;console.log(r);const t=$("<div></div>").attr("class","task-card");t.text(`${r}`);const o=$("<button>x</i></button>").attr("data-task-id",`${a.task_id}`).attr("class","delete_task"),c=$("<div></div>").attr("class","task-container"),n=$("<button>To-Do</i></button>").attr("data-task-id",a.task_id).attr("id",a.user_id).attr("data-task-complete",a.completed).attr("class","completed_task");t.prepend(n),t.append(o),c.append(t),u.append(c),i.append(u)}).catch(a=>{console.error("error",a)})}f.on("keypress",".newTodoText",s=>{const e=$(".newTodoText");s.key==="Enter"&&(s.preventDefault(),e.val()===""?alert("Please enter a task"):E(),e.val(""))});i.on("click",".incomplete_task",b);i.on("click",".completed_task",b);function b(s){console.log($(s.target).data("task-id")),console.log($(s.target).attr("id")),console.log($(s.target).data("task-complete"));const e=$(s.target).attr("id"),a=$(s.target).data("task-id"),r=$(s.target).data("task-complete");fetch(`/tasks/${e}/${a}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({completed:r})}).then(t=>{if(!t.ok)throw new Error("Task change failed.");return t.json()}).then(t=>{if(console.log(t),s.target.closest(".task-container").remove(),t.completed===!1){let c=t.todo;const n=$("<div></div>").attr("class","task-card");n.text(`${c}`);const p=$("<button>x</i></button>").attr("data-task-id",`${t.task_id}`).attr("class","delete_task"),d=$("<div></div>").attr("class","task-container"),l=$("<button>To-Do</i></button>").attr("data-task-id",t.task_id).attr("id",t.user_id).attr("data-task-complete",!1).attr("class","incomplete_task");n.prepend(l),n.prepend(p),d.append(n),u.append(d),i.append(u)}else{let c=t.todo;const n=$("<div></div>").attr("class","task-card");n.text(`${c}`);const p=$("<button>x</i></button>").attr("data-task-id",`${t.task_id}`).attr("class","delete_task"),d=$("<div></div>").attr("class","task-container"),l=$("<button>Done</i></button>").attr("data-task-id",t.task_id).attr("id",t.user_id).attr("data-task-complete",!0).attr("class","completed_task");n.prepend(l),n.prepend(p),d.append(n),k.append(d),i.append(k)}}).catch(t=>{console.error(t)})}i.on("click",".delete_task",N);function N(s){const e=$(s.target).data("task-id");confirm("Are you sure you want to delete this task?")&&fetch(`${m}tasks/${e}`,{method:"DELETE"}).then(a=>a.json()).then(a=>{alert("Task deleted!"),s.target.closest(".task-container").remove()}).catch(a=>{console.error("Error:",a)})}
